plugins {
    id 'maven-publish'
    id 'idea'
    id 'net.minecraftforge.gradle' version '[6.0,6.2)'
}

java.toolchain.languageVersion = JavaLanguageVersion.of(17)

repositories {
  maven {
    name = "JEI maven"
    url = "https://dvs1.progwml6.com/files/maven/"
  }
  maven { 
    name = "CraftTweaker2"
    url = "https://maven.blamejared.com" 
  }
  flatDir { dirs 'deps' }
}

version = "${minecraft_version}-${mod_version}" + getBuildNumber()
group = "com.teammetallurgy.aquaculture"

base {
    archivesName = "Aquaculture"
}

minecraft {
    mappings channel: 'official', version: project.minecraft_version
	accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')
	enableIdeaPrepareRuns = true
	copyIdeResources = true
	generateRunFolders = true
	
    runs {
        client {
            workingDirectory project.file('run')
			
            mods {
                "${mod_id}" {
                    source sourceSets.main
                }
            }
        }
        server {
            workingDirectory project.file('run')

            mods {
                "${mod_id}" {
                    source sourceSets.main
                }
            }
        }
        data {
            workingDirectory project.file('run')
            args '--mod', 'aquaculture', '--all', '--output', file("src/generated/resources/"), '--existing', file("src/main/resources/")
            mods {
                "${mod_id}" {
                    source sourceSets.main
                }
            }
        }
    }
}

dependencies {
    minecraft "net.minecraftforge:forge:${minecraft_version}-${forge_version}"
    compileOnly fg.deobf("mezz.jei:jei-${minecraft_version}-common-api:${jei_version}")
    compileOnly fg.deobf("mezz.jei:jei-${minecraft_version}-forge-api:${jei_version}")
    runtimeOnly fg.deobf("mezz.jei:jei-${minecraft_version}-forge:${jei_version}")
    //compileOnly fg.deobf("com.blamejared.crafttweaker:CraftTweaker-forge-1.18.1:${ct_version}")
}

def resourceTargets = ['META-INF/mods.toml']
def replaceProperties = [
        minecraft_version: minecraft_version, minecraft_version_range: minecraft_version_range,
        forge_version: forge_version, forge_version_range: forge_version_range,
        loader_version_range: loader_version_range,
        mod_version: mod_version,
]

processResources {
    inputs.properties replaceProperties
    replaceProperties.put 'project', project

    filesMatching(resourceTargets) {
        expand replaceProperties
    }
}

task apiJar(type: Jar) {
	from sourceSets.main.allSource
	from sourceSets.main.output
    include 'com/teammetallurgy/aquaculture/api/**/*'
    archiveClassifier = 'api'
}

publishing {
    tasks.publish.dependsOn 'build'
    publications {
        mavenJava(MavenPublication) {
            artifactId "aquaculture2_${minecraft_version}"
            artifact jar
			artifact apiJar
        }
    }
    repositories {
        if (project.hasProperty('maven_repo')) {
            maven { url maven_repo }
        } else {
            mavenLocal()
        }
    }
}

artifacts {
    archives apiJar
}

String getBuildNumber() {
    return System.getenv('BUILD_NUMBER') ? ".jenkins" + System.getenv('BUILD_NUMBER') : "";
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
}